package uicli;

import java.util.ArrayList;
import java.util.InputMismatchException;

import interfaces.UIFinishedObserverIF;
import interfaces.UI_Interface;

/**
 * Command line implementation of the main menu. Observing classes
 * will register with the setUIFinishedObserver method to be
 * notified when the user had completed and what object/value 
 * was generated by the user interaction.
 * 
 * @author Nathaniel Welch
 * @author Nathan Jenkins
 * @author Melanney Orta
 * @author Christen Kangas
 * @version 05/25/2022
 */
public class CLI_MainOptions implements UI_Interface<Integer> {


	
	/**The options to display to the user**/
	private ArrayList<String> options;
	
   /**The observer for when the UI is finished**/
   private UIFinishedObserverIF<Integer> uifo;
   
   /**The response by the user**/
   private Integer response;
	
	/**
	 * Construct a main options menu for the command line.
	 */
	public CLI_MainOptions() {
		
		options = new ArrayList<>();
	}
	
	
	
	/**
	 * Show the user interface to the user for this menu.
	 */
	@Override
	public void showUI() {
		System.out.println("===Welcome to ChessMeister===");
		this.options = new ArrayList<String>();
        this.options.add("Log In and Play New Game");
        this.options.add("Play as Guests");
        this.options.add("Create a New Account");
        this.options.add("Change UserID");
        this.options.add("Toggle Board Color");
        this.options.add("Quit");
        
        System.out.println("\n"); 
        for (int i =0; i<options.size(); i++){
            System.out.println(i + " - " + options.get(i));
        }
        
        int option = -1;
        boolean valid = false;
        //Input repeats while not valid
        do {
	        try{
	            option = kbInput.nextInt();
	            
	            if(option >= 0 && option < options.size() )
	            	valid = true;
	            else
	            	System.out.println("Invalid option number, try again");
	        }catch(InputMismatchException e){
	            System.out.println("Invalid option, try again");
	        }   
	        System.out.println('\n');
        }while(!valid);

        response = Integer.valueOf(option);//Store Valid response
        
        finished();//notify observer input is finished.
                   //With a GUI this would be called by a 
        		  //Button press rather after the scanner is done.
		
	}
	

	/**Set the observer for this class to listen for when the UI is done.
	 * @param uifo The UIFinishedObserverIF will listen for when the user has finished.
	 * their selection.
	 */
	@Override
	public void setFinishedObserver(UIFinishedObserverIF<Integer> uifo) {
		this.uifo =  uifo;
		
	}

	/**Notify the observer that the user has finished input**/
	@Override
	public void finished() {
		
		if(uifo != null)
			uifo.inputFinished(response,this);

	}//end finished.

	
}//end class
